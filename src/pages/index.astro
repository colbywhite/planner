---
import Root from "../layout/root.astro";
import {BlockService} from "../services/block.service";
import {calendarAddition, formatDate} from "../utils";
import {DateTime} from "luxon";

const requestedBlockIndex = Number(Astro.url.searchParams.get('block') || '1');
const {block, previousIndex, nextIndex} = await new BlockService(Astro.cookies).getBlockAndTasks(requestedBlockIndex)
const prevBlockHref = previousIndex !== undefined ? `?block=${previousIndex}` : undefined;
const nextBlockHref = nextIndex !== undefined ? `?block=${nextIndex}` : undefined;
const newBlockDefaultDate = block ? calendarAddition(block.end, {days: 1}).toISODate() : DateTime.now().toISODate()
---
<Root>
    <main class="grid grid-cols-1 items-center max-w-screen-sm mx-auto p-4" x-data>
        <section class="card min-h-96 bg-accent text-accent-content shadow-xl">
            <div class="card-body">
                <h2 class="card-title text-accent-content justify-between">
                    {block === null ? "No blocks found" : `${formatDate(block.start)} - ${formatDate(block.end)}`}
                    <button @click="$refs.dialog.showModal()" class="btn btn-primary btn-circle">+</button>
                </h2>
                {block !== null &&
                    <ul class="list-disc grow flex flex-col gap-2">
                        {block.tasks.map(({emoji, name}) => <li>{emoji} {name}</li>)}
                        <li>
                            <span class="italic" hx-swap="outerHTML" hx-include="input[name='block_id']" hx-get="/partials/tasks.new">
                                Add task
                            </span>
                            <input type="hidden" name="block_id" value={block.block_id}>
                        </li>
                    </ul>
                    <div class="card-actions justify-between">
                        <div>
                            {prevBlockHref && (
                                    <a href={prevBlockHref} class="btn btn-neutral">Previous</a>
                            )}
                            {nextBlockHref && (
                                    <a href={nextBlockHref} class="btn btn-neutral">Next</a>
                            )}
                        </div>
                    </div>
                }
            </div>
        </section>
            <dialog x-ref="dialog" class="modal">
                <div class="modal-box">
                    <form action="/api/blocks.new" method="post" class="flex flex-col gap-4">
                        <label class="form-control w-full max-w-xs">
                            <div class="label">
                                <span class="label-text">Start date</span>
                            </div>
                            <input type="date" name="start" value={newBlockDefaultDate} class="input input-bordered w-full max-w-xs" />
                        </label>
                        <button type="submit" class="btn btn-primary">Create block</button>
                    </form>
                </div>
                <form method="dialog" class="modal-backdrop">
                    <button>close</button>
                </form>
            </dialog>
    </main>
</Root>
